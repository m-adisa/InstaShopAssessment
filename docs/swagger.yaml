basePath: /
definitions:
  models.CreateOrderInput:
    properties:
      product_ids:
        items:
          type: integer
        type: array
    type: object
  models.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.Order:
    properties:
      products:
        items:
          $ref: '#/definitions/models.Product'
        minItems: 1
        type: array
      status:
        enum:
        - Pending
        - Processing
        - Completed
        - Cancelled
        type: string
      total_cost:
        type: number
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    required:
    - products
    - status
    - total_cost
    - user_id
    type: object
  models.Product:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  models.UpdateOrderStatusInput:
    properties:
      status:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        enum:
        - regular
        - admin
        type: string
    required:
    - email
    - name
    - password
    - role
    type: object
  utils.APIResponse:
    properties:
      data: {}
      error: {}
      message:
        type: string
      meta: {}
    type: object
host: localhost:8080
info:
  contact:
    email: iconmoa@gmail.com.com
    name: API Support
  description: This API is for Instashop Assessment
  title: Instashop API
  version: "1.0"
paths:
  /orders:
    get:
      consumes:
      - application/json
      description: Get all orders for a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/utils.APIResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Get all orders for a user
      tags:
      - Orders
  /orders/cancel/{id}/:
    put:
      consumes:
      - application/json
      description: Cancel an order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Cancel an order
      tags:
      - Orders
  /orders/create:
    post:
      consumes:
      - application/json
      description: Create a new order
      parameters:
      - description: Order details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrderInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Create a new order
      tags:
      - Orders
  /orders/status/{id}:
    put:
      consumes:
      - application/json
      description: Update order status
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update order status
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateOrderStatusInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Update order status
      tags:
      - Orders
  /products:
    get:
      description: Get all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Get all products
      tags:
      - Products
  /products/{id}:
    delete:
      description: Delete a product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Delete a product
      tags:
      - Products
    get:
      description: Get a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Get a product by ID
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Update a product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Update a product
      tags:
      - Products
  /products/create:
    post:
      consumes:
      - application/json
      description: Create a new product
      parameters:
      - description: Product details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      security:
      - BearerAuth: []
      summary: Create a new product
      tags:
      - Products
  /users/login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: Login details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Login a user
      tags:
      - Users
  /users/register:
    post:
      consumes:
      - application/json
      description: Sign up a new user
      parameters:
      - description: User details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Sign up a new user
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
